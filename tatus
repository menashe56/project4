[33mcommit 9d2aafd3884e38bc97fc06354f6625743799e242[m[33m ([m[1;31morigin/main[m[33m, [m[1;32mmain[m[33m)[m
Author: menashe <menashe7676@gmail.com>
Date:   Tue Dec 12 21:26:07 2023 +0200

    Descriptive commit message

[1mdiff --git a/App.js b/App.js[m
[1mindex 7c53ce4..cc51aca 100644[m
[1m--- a/App.js[m
[1m+++ b/App.js[m
[36m@@ -1,5 +1,5 @@[m
 import React from 'react';[m
[31m-import { StyleSheet, View, Text } from 'react-native';[m
[32m+[m[32mimport { StyleSheet, } from 'react-native';[m
 import MainApp from './Interface/MainApp';[m
 import { NavigationContainer } from '@react-navigation/native';[m
 import { Provider } from 'react-redux';[m
[36m@@ -19,11 +19,4 @@[m [mexport default function App() {[m
 [m
 }[m
 [m
[31m-const styles = StyleSheet.create({[m
[31m-  container: {[m
[31m-    flex: 1,[m
[31m-    flexDirection: 'row',[m
[31m-    backgroundColor: 'black',[m
[31m-    paddingVertical: 10,[m
[31m-  },[m
[31m-});[m
\ No newline at end of file[m
[32m+[m[32mconst styles = StyleSheet.create({});[m
\ No newline at end of file[m
[1mdiff --git a/Interface/Home.js b/Interface/Home.js[m
[1mindex 8c1f9e7..afe37d9 100644[m
[1m--- a/Interface/Home.js[m
[1m+++ b/Interface/Home.js[m
[36m@@ -22,8 +22,6 @@[m [mimport axios from 'axios';[m
 import ChatList from './ChatList';[m
 import { connect } from 'react-redux';[m
 import {Set_newChatVisible, Set_isAddChatModalVisible, Set_currentRouteName, Set_onSearch, Set_searchInput, Set_twoDimensionalFilteredChatsArray } from '../Redux/counterSlice';[m
[31m-import ListMessages from '../components1/ListMessages';[m
[31m-import ImageUploader from '../components1/ImageUploader';[m
 import ChatList2 from './ChatList2';[m
 import * as ImagePicker from 'expo-image-picker';[m
 import OnSearch from './OnSearch';[m
[36m@@ -31,15 +29,10 @@[m [mimport { useNavigation, useNavigationState } from '@react-navigation/native';[m
 [m
 [m
 const Home = ({[m
[31m-    navigation, route, ip, Set_currentRouteName, [m
[31m-    user_email, [m
[31m-    user_name, [m
[31m-    user_picture,[m
[31m-    isAddChatModalVisible, Set_isAddChatModalVisible,[m
[32m+[m[32m    navigation, ip,[m
     newChatVisible, Set_newChatVisible,[m
     Set_onSearch, onSearch,[m
     Set_searchInput, searchInput,[m
[31m-    Set_twoDimensionalFilteredChatsArray, twoDimensionalFilteredChatsArray[m
     }) => {[m
   const [chats, setChats] = useState([]);[m
   const [filteredChats, setFilteredChats] = useState([]);[m
[36m@@ -47,22 +40,11 @@[m [mconst Home = ({[m
   const [chatTypes, setChatTypes] = useState([])[m
   const [chatName, setChatName] = useState('');[m
   const [chatImage, setChatImage] = useState(null);[m
[31m-  const [loadingImage, setLoadingImage] = useState(false);[m
   const [type, setType] = useState('');[m
 [m
   const state = useNavigationState((state) => state);[m
 [m
[31m-  console.log(state)[m
[31m-[m
[31m-  const slideAnim = useRef(new Animated.Value(0)).current;[m
[31m-[m
[31m-  const toggleDropdown = () => {[m
[31m-    setDropdownVisible(!isDropdownVisible);[m
[31m-  };[m
[31m-[m
[31m-  useEffect(() => {[m
[31m-    Set_currentRouteName('Home')[m
[31m-  }, [navigation]);[m
[32m+[m[32m  console.log('current screen : ', state)[m
 [m
   useEffect(() => {[m
     const fetchChatTypes = async () => {[m
[36m@@ -111,33 +93,11 @@[m [mconst Home = ({[m
     }, []));[m
 [m
     };[m
[32m+[m
     updateFilteredChats();[m
[31m-    console.log('after:',chats.filter((chat) =>[m
[31m-    chat.chat_name.toLowerCase().includes(searchInput.toLowerCase())[m
[31m-  ).reduce((result, filteredChat) => {[m
[31m-      const existingArray = result.find((arr) => arr[0]?.type === filteredChat.type);[m
[31m-    [m
[31m-      if (existingArray) {[m
[31m-        existingArray.push(filteredChat);[m
[31m-      } else {[m
[31m-        result.push([filteredChat]);[m
[31m-      }[m
[31m-    [m
[31m-      return result;[m
[31m-  }, []))[m
 [m
   }, [chats, searchInput]);[m
 [m
[31m-  const handleSearchIconPress = () => {[m
[31m-    setIsSearchOpen(!isSearchOpen);[m
[31m-[m
[31m-    Animated.timing(slideAnim, {[m
[31m-      toValue: isSearchOpen ? 1 : 0,[m
[31m-      duration: isSearchOpen ? 500 : 300, // Adjust the duration based on your preference[m
[31m-      useNativeDriver: false,[m
[31m-    }).start();[m
[31m-  };[m
[31m-[m
   useEffect(() => {[m
     (async () => {[m
       const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();[m
[36m@@ -147,13 +107,6 @@[m [mconst Home = ({[m
     })();[m
   }, []);[m
 [m
[31m-  const close = () => {[m
[31m-    Set_newChatVisible(false);[m
[31m-    setChatName('');[m
[31m-    setType('');[m
[31m-    setChatImage(null);[m
[31m-  };[m
[31m-[m
   const handleChoosePhoto = (event) => {[m
     const selectedFile = event.target.files[0];[m
 [m
[36m@@ -193,110 +146,111 @@[m [mconst Home = ({[m
     }[m
   };[m
 [m
[31m-return ([m
[31m-    <TouchableWithoutFeedback onPress={() => {if(newChatVisible){Set_newChatVisible(false); close()}}}>[m
[31m-    <SafeAreaView style={styles.container}>[m
[31m-    {newChatVisible &&[m
[31m-            <View style={{ position: 'absolute', top: 15, left: 15, right: 0, bottom: 0, zIndex: 1, width: 180 }} onClick={(e) => e.stopPropagation()}>[m
[32m+[m[32m  const close = () => {[m
[32m+[m[32m    Set_newChatVisible(false);[m
[32m+[m[32m    setChatName('');[m
[32m+[m[32m    setType('');[m
[32m+[m[32m    setChatImage(null);[m
[32m+[m[32m  };[m
 [m
[31m-          <View style={{ backgroundColor: 'white', borderColor: 'rgb(230, 232, 230)', borderWidth: 1, }}>[m
[31m-            <View style={{backgroundColor: 'rgb(230, 232, 230)', alignItems: 'center'}}>[m
[31m-            <Text style={{ fontSize: 16, fontWeight: 'bold', color: 'blue' }}>Create new chat</Text>[m
[31m-            </View>[m
[31m-            <View style={{padding:10}}>[m
[31m-            <Input[m
[31m-          placeholder='Enter chat name'[m
[31m-          value={chatName}[m
[31m-          onChangeText={(text) => setChatName(text)}[m
[31m-          leftIcon={<Icon name='wechat' type="antdesign" size={16} color="#333" />}[m
[31m-          style={{width: 100,  fontSize: 12 }}[m
[31m-        />[m
[32m+[m[32m  return ([m
[32m+[m[32m    <TouchableWithoutFeedback onPress={() => { if (newChatVisible) { Set_newChatVisible(false); close() } }}>[m
[32m+[m[32m      <SafeAreaView style={styles.container}>[m
[32m+[m[32m        {newChatVisible &&[m
[32m+[m[32m          <View style={{ position: 'absolute', top: 15, left: 15, right: 0, bottom: 0, zIndex: 1, width: 180 }} onClick={(e) => e.stopPropagation()}>[m
[32m+[m[32m            <View style={{ backgroundColor: 'white', borderColor: 'rgb(230, 232, 230)', borderWidth: 1, }}>[m
[32m+[m[32m              <View style={{ backgroundColor: 'rgb(230, 232, 230)', alignItems: 'center' }}>[m
[32m+[m[32m                <Text style={{ fontSize: 16, fontWeight: 'bold', color: 'blue' }}>Create new chat</Text>[m
[32m+[m[32m              </View>[m
[32m+[m[32m              <View style={{ padding: 10 }}>[m
                 <Input[m
[31m-          placeholder='Enter chat type'[m
[31m-          value={type}[m
[31m-          onChangeText={(text) => setType(text)}[m
[31m-          leftIcon={<Icon name='group' type="MaterialIcons" size={16} color="#333" />}[m
[31m-          style={{width: 100,  fontSize: 12 }}[m
[31m-        />[m
[31m-        <input type="file" accept="image/*" onChange={handleChoosePhoto} />[m
[31m-        {loadingImage && <ActivityIndicator size="large" color="#2196F3" />}[m
[31m-        {chatImage && ([m
[31m-          <img src={URL.createObjectURL(chatImage)} alt="Selected" style={{ width: 30, height: 30 }} />[m
[31m-        )}[m
[31m-        <Button[m
[31m-          disabled={!(chatName && type)}[m
[31m-          title='Ask your first question'[m
[31m-          onPress={() => {handleUploadPhoto(); close();}}[m
[31m-          buttonStyle={styles.createButton}[m
[31m-          style={{}}[m
[31m-        />[m
[31m-        </View>[m
[31m-          </View>[m
[31m-      </View>}[m
[31m-            <ScrollView[m
[31m-        style={{ flex: 1 }}[m
[31m-      >        {chats.length === 0 && <Text style={styles.noChatsText}>No chats available</Text>}[m
[31m-{!onSearch ? ([m
[31m-  <View style={styles.chatsContainer}>[m
[31m-    <View style={[styles.chatsList, { marginBottom: 150 }]}>[m
[31m-      {chats[m
[31m-        .slice(1, 4) // Get only the first three chats[m
[31m-        .map((chat) => ([m
[31m-          <TouchableOpacity[m
[31m-            key={chat.chat_name}[m
[31m-            style={{ width: 300, height: 80, marginRight: 10 }}[m
[31m-            onPress={() =>[m
[31m-              navigation.navigate('Chat', {chat})[m
[31m-            }[m
[31m-          >[m
[31m-            <ChatList chat={chat} />[m
[31m-          </TouchableOpacity>[m
[31m-        ))}[m
[31m-    </View>[m
[31m-    <View style={styles.chatsList}>[m
[31m-      {chatTypes.map((chatType) => ([m
[31m-        <View style={{ paddingRight: 10 }}>[m
[31m-          <ChatList2[m
[31m-            key={chatType}[m
[31m-            chatType={chatType}[m
[31m-            chats={chats.filter((chat) => chat.type.includes(chatType.type))}[m
[31m-          />[m
[31m-        </View>[m
[31m-      ))}[m
[31m-    </View>[m
[31m-  </View>[m
[31m-) : ([m
[31m-<View style={{ flex: 1, padding: 16 }}>[m
[31m-  {filteredChats.map((filteredChatArray, index) => ([m
[31m-    <View key={index} style={{ marginBottom: 16 }}>[m
[31m-      <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>[m
[31m-        {filteredChatArray.map((filteredChat) => ([m
[31m-                          <TouchableOpacity key={filteredChat.chat_name} style={{ width: '48%', margin: '1%', borderRadius: 10, overflow: 'hidden', backgroundColor: 'white', elevation: 3 }} onPress={() => handleChatPress(filteredChat)}>[m
[31m-                                        <View style={{ flexDirection: 'row', padding: 8 }}>[m
[31m-[m
[31m-            <ImageBackground source={{ uri: filteredChat.type_image }} style={{ flex: 1, justifyContent: 'flex-end' }}>[m
[31m-              <View style={{ height: 30, backgroundColor: 'rgba(15, 15, 15, 0.8)', borderWidth: 2, borderColor: 'white', borderTopLeftRadius: 10, borderBottomRightRadius: 10, padding: 5 }}>[m
[31m-                <Text style={{ fontSize: 16, color: 'white', fontWeight: '500', paddingLeft: 5 }}>{filteredChat.type}</Text>[m
[32m+[m[32m                  placeholder='Enter chat name'[m
[32m+[m[32m                  value={chatName}[m
[32m+[m[32m                  onChangeText={(text) => setChatName(text)}[m
[32m+[m[32m                  leftIcon={<Icon name='wechat' type="antdesign" size={16} color="#333" />}[m
[32m+[m[32m                  style={{ width: 100, fontSize: 12 }}[m
[32m+[m[32m                />[m
[32m+[m[32m                <Input[m
[32m+[m[32m                  placeholder='Enter chat type'[m
[32m+[m[32m                  value={type}[m
[32m+[m[32m                  onChangeText={(text) => setType(text)}[m
[32m+[m[32m                  leftIcon={<Icon name='group' type="MaterialIcons" size={16} color="#333" />}[m
[32m+[m[32m                  style={{ width: 100, fontSize: 12 }}[m
[32m+[m[32m                />[m
[32m+[m[32m                <input type="file" accept="image/*" onChange={handleChoosePhoto} />[m
[32m+[m[32m                {chatImage && ([m
[32m+[m[32m                  <img src={URL.createObjectURL(chatImage)} alt="Selected" style={{ width: 30, height: 30 }} />[m
[32m+[m[32m                )}[m
[32m+[m[32m                <Button[m
[32m+[m[32m                  disabled={!(chatName && type)}[m
[32m+[m[32m                  title='Ask your first question'[m
[32m+[m[32m                  onPress={() => { handleUploadPhoto(); close(); }}[m
[32m+[m[32m                  buttonStyle={styles.createButton}[m
[32m+[m[32m                  style={{}}[m
[32m+[m[32m                />[m
               </View>[m
[31m-            </ImageBackground>[m
[31m-              <OnSearch filteredChat={filteredChat} />[m
             </View>[m
[31m-          </TouchableOpacity>[m
[31m-        ))}[m
[31m-      </View>[m
[31m-    </View>[m
[31m-  ))}[m
[31m-</View>[m
[31m-[m
[31m-[m
[31m-)}[m
[31m-          <View style={{marginTop: 20, borderTopLeftRadius: 10, borderTopRightRadius: 10, borderRightWidth: 2,borderLeftWidth: 2, borderTopWidth: 2, height: 200, width: 900, borderRightColor: 'rgb(230, 232, 230)', borderLeftColor: 'rgb(230, 232, 230)', borderTopColor: 'rgb(230, 232, 230)', marginTop: 'auto'}}>[m
[31m-[m
[31m-</View>[m
[31m-          </ScrollView>[m
[31m-    </SafeAreaView>[m
[32m+[m[32m          </View>}[m
[32m+[m[32m        <ScrollView[m
[32m+[m[32m          style={{ flex: 1 }}[m
[32m+[m[32m        >[m
[32m+[m[32m          {chats.length === 0 && <Text style={styles.noChatsText}>No chats available</Text>}[m
[32m+[m[32m          {!onSearch ? ([m
[32m+[m[32m            <View style={styles.chatsContainer}>[m
[32m+[m[32m              <View style={[styles.chatsList, { marginBottom: 150 }]}>[m
[32m+[m[32m                {chats[m
[32m+[m[32m                  .slice(1, 4) // Get only the first three chats[m
[32m+[m[32m                  .map((chat) => ([m
[32m+[m[32m                    <TouchableOpacity[m
[32m+[m[32m                      key={chat.chat_name}[m
[32m+[m[32m                      style={{ width: 300, height: 80, marginRight: 10 }}[m
[32m+[m[32m                      onPress={() => navigation.navigate('Chat', { chat })}[m
[32m+[m[32m                    >[m
[32m+[m[32m                      <ChatList chat={chat} />[m
[32m+[m[32m                    </TouchableOpacity>[m
[32m+[m[32m                  ))}[m
[32m+[m[32m              </View>[m
[32m+[m[32m              <View style={styles.chatsList}>[m
[32m+[m[32m                {chatTypes.map((chatType) => ([m
[32m+[m[32m                  <View style={{ paddingRight: 10 }}>[m
[32m+[m[32m                    <ChatList2[m
[32m+[m[32m                      key={chatType}[m
[32m+[m[32m                      chatType={chatType}[m
[32m+[m[32m                      chats={chats.filter((chat) => chat.type.includes(chatType.type))}[m
[32m+[m[32m                    />[m
[32m+[m[32m                  </View>[m
[32m+[m[32m                ))}[m
[32m+[m[32m              </View>[m
[32m+[m[32m            </View>[m
[32m+[m[32m          ) : ([m
[32m+[m[32m            <View style={{ flex: 1, padding: 16 }}>[m
[32m+[m[32m              {filteredChats.map((filteredChatArray, index) => ([m
[32m+[m[32m                <View key={index} style={{ marginBottom: 16 }}>[m
[32m+[m[32m                  <View style={{ flexDirection: 'row', flexWrap: 'wrap' }}>[m
[32m+[m[32m                    {filteredChatArray.map((filteredChat) => ([m
[32m+[m[32m                      <TouchableOpacity key={filteredChat.chat_name} style={{ width: '48%', margin: '1%', borderRadius: 10, overflow: 'hidden', backgroundColor: 'white', elevation: 3 }} onPress={() => handleChatPress(filteredChat)}>[m
[32m+[m[32m                        <View style={{ flexDirection: 'row', padding: 8 }}>[m
[32m+[m[32m                          <ImageBackground source={{ uri: filteredChat.type_image }} style={{ flex: 1, justifyContent: 'flex-end' }}>[m
[32m+[m[32m                            <View style={{ height: 30, backgroundColor: 'rgba(15, 15, 15, 0.8)', borderWidth: 2, borderColor: 'white', borderTopLeftRadius: 10, borderBottomRightRadius: 10, padding: 5 }}>[m
[32m+[m[32m                              <Text style={{ fontSize: 16, color: 'white', fontWeight: '500', paddingLeft: 5 }}>{filteredChat.type}</Text>[m
[32m+[m[32m                            </View>[m
[32m+[m[32m                          </ImageBackground>[m
[32m+[m[32m                          <OnSearch filteredChat={filteredChat} />[m
[32m+[m[32m                        </View>[m
[32m+[m[32m                      </TouchableOpacity>[m
[32m+[m[32m                    ))}[m
[32m+[m[32m                  </View>[m
[32m+[m[32m                </View>[m
[32m+[m[32m              ))}[m
[32m+[m[32m            </View>[m
[32m+[m[32m          )}[m
[32m+[m[32m          <View style={{ marginTop: 20, borderTopLeftRadius: 10, borderTopRightRadius: 10, borderRightWidth: 2, borderLeftWidth: 2, borderTopWidth: 2, height: 200, width: 900, borderRightColor: 'rgb(230, 232, 230)', borderLeftColor: 'rgb(230, 232, 230)', borderTopColor: 'rgb(230, 232, 230)', marginTop: 'auto' }}>[m
[32m+[m[32m          </View>[m
[32m+[m[32m        </ScrollView>[m
[32m+[m[32m      </SafeAreaView>[m
     </TouchableWithoutFeedback>[m
[31m-  );  [m
[32m+[m[32m  );[m
[32m+[m[41m  [m
 };[m
 [m
 const windowHeight = Dimensions.get('window').height;[m
[1mdiff --git a/Interface/MainApp.js b/Interface/MainApp.js[m
[1mindex 70c77d8..b3587e1 100644[m
[1m--- a/Interface/MainApp.js[m
[1m+++ b/Interface/MainApp.js[m
[36m@@ -20,15 +20,14 @@[m [mconst globalScreenOptions = {[m
   headerShown: false,[m
 };[m
 [m
[31m-const MainApp = ({Set_ip, ip, user_email}) => {[m
[32m+[m[32mconst MainApp = ({Set_ip, user_email}) => {[m
 [m
     const state = useNavigationState((state) => state);[m
[31m-    console.log(state)[m
[32m+[m[32m    console.log('current screen : ', state)[m
 [m
   useEffect(() => {[m
     Set_ip("16.16.28.132");[m
[31m-    console.log(ip)[m
[31m-  }, [ip]);[m
[32m+[m[32m  }, []);[m
 [m
   const headerComponent = user_email !== '' ? <HeaderIn /> : <HeaderOut />;[m
 [m
[36m@@ -49,7 +48,7 @@[m [mconst MainApp = ({Set_ip, ip, user_email}) => {[m
                 screenOptions={globalScreenOptions}[m
                 initialRouteName="Home"[m
               >[m
[31m-                <Stack.Screen name="Home" component={Home} />[m
[32m+[m[32m               <Stack.Screen name="Home" component={Home} />[m
                 <Stack.Screen name='OnSearch' component={OnSearch} />[m
                 <Stack.Screen name="AskQuestion" component={AskQuestion} />[m
                 <Stack.Screen name="Chat" component={Chat} />[m
[36m@@ -83,7 +82,6 @@[m [mconst styles = StyleSheet.create({[m
 });[m
 [m
 const mapStateToProps = (state) => ({[m
[31m-    ip: state.Other.ip, [m
     user_email: state.user_profile.user_email,[m
   });[m
   [m
[1mdiff --git a/server/server.js b/server/server.js[m
[1mindex 6be46bd..d47c7de 100644[m
[1m--- a/server/server.js[m
[1m+++ b/server/server.js[m
[36m@@ -17,7 +17,7 @@[m [mconst wss = new WebSocket.Server({ server });[m
 [m
 // Enable CORS for all routes[m
 const corsOptions = {[m
[31m-  origin: 'http://localhost:19006',[m
[32m+[m[32m  origin: 'true',   //'http://localhost:19006'[m
   methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',[m
   credentials: true,[m
   optionsSuccessStatus: 204,[m
[36m@@ -619,13 +619,20 @@[m [mapp.post('/api/chats/:chat_name/questions/:question_id/send-message', async (req[m
     }[m
 [m
     // Insert the new message into the database[m
[31m-    await pool.execute([m
[32m+[m[32m    const InsertResult = await pool.execute([m
       'INSERT INTO Messages (chat_name, question_id, sender_email, message_content) VALUES (?, ?, ?, ?)',[m
       [chat_name, question_id, sender_email, message_content][m
     );[m
 [m
[32m+[m[32m    const [new_message] = await pool.execute('SELECT * FROM Messages WHERE message_id = ?',[InsertResult.data.insertId])[m
[32m+[m
[32m+[m[32m    if (!new_message || new_message.length === 0) {[m
[32m+[m[32m      logger.error('Error fetching newly inserted message');[m
[32m+[m[32m      return res.status(500).json({ error: 'Error fetching newly inserted message' });[m
[32m+[m[32m    }[m
[32m+[m
     logger.info('Message sent successfully');[m
[31m-    res.status(200).json({ success: true, message: 'Message sent successfully' });[m
[32m+[m[32m    res.status(200).json({ success: true, result: 'Message sent successfully',  InsertResponse: InsertResult, message: new_message });[m
 [m
                 // Notify WebSocket clients[m
                 wss.clients.forEach((client) => {[m
